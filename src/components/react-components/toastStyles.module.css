@property --toast-delay {
  syntax: "<time>";
  inherits: true;
  initial-value: 2s;
}

@property --exit-top-value {
  syntax: "<percentage>";
  inherits: true;
  initial-value: inherit;
}

@property --exit-bottom-value {
  syntax: "<percentage>";
  inherits: true;
  initial-value: inherit;
}

@property --top-value {
  syntax: "<length>";
  inherits: true;
  initial-value: inherit;
}

@property --bottom-value {
  syntax: "<length>";
  inherits: true;
  initial-value: inherit;
}

.toast-styles {
  position: fixed;
  border-width: 2px;
  border-radius: 0.25em;
  width: fit-content;
  padding: 0.5em 1em;
  z-index: 1000;
  backdrop-filter: blur(6px);
}

/*variants*/
.top-middle,
.bottom-middle {
  left: 50%;
  transform: translateX(-50%);
}
.top-left,
.bottom-left {
  left: 1.25rem;
}
.top-right,
.bottom-right {
  right: 1.25rem;
}

.default {
  border-color: hsl(240, 3.7%, 15.9%);
}
.success {
  border-color: hsl(142.4, 71.8%, 29.2%);
  color: hsl(142.4, 71.8%, 29.2%);
}
.error {
  border-color: hsl(0, 73.7%, 41.8%);
  color: hsl(0, 73.7%, 41.8%);
}
.warning {
  border-color: hsl(52.8, 98.3%, 76.9%);
  color: hsl(40.6, 96.1%, 40.4%);
}
.info {
  border-color: hsl(213.1, 93.9%, 67.8%);
  color: hsl(224.3, 76.3%, 48%);
}

/*animation*/
.toast-animation {
  animation:
    enter 300ms linear 0s 1 forwards,
    close-toast 300ms linear var(--toast-delay) 1 forwards;
  top: var(--exit-top-value);
  bottom: var(--exit-bottom-value);
}

.force-close-animation[data-hide="true"] {
  animation: force-close 300ms linear 0s 1 forwards;
  top: var(--top-value);
  bottom: var(--bottom-value);
}
@keyframes force-close {
  to {
    top: var(--exit-top-value);
    bottom: var(--exit-bottom-value);
  }
}

@keyframes close-toast {
  to {
    top: var(--exit-top-value);
    bottom: var(--exit-bottom-value);
  }
}
@keyframes enter {
  to {
    top: var(--top-value);
    bottom: var(--bottom-value);
  }
}

.closing-timer {
  position: absolute;
  top: 0;
  left: 0;
  height: 2px;
  width: 100%;
  background-color: hsl(142.1, 70.6%, 45.3%);
  transition-property: transform;
  transition-duration: var(--toast-delay);
  transition-timing-function: linear;
  transform: scale(0, 1);
  transform-origin: left;

  @starting-style {
    transform: scale(1, 1);
  }
}

.close-btn {
  display: none;
  position: absolute;
  top: 0.15rem;
  right: 0.15rem;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  padding: 0.25em;

  &:hover {
    background-color: hsl(0, 93.5%, 81.8%);
  }
  svg {
    fill: hsl(0, 73.7%, 41.8%);
  }
}

.close-btn[data-show="true"] {
  display: block;
}

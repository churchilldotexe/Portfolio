---
import Layout from "@/layouts/Layout.astro";
import profileImg from "@/assets/profile.png";
import { Image } from "astro:assets";
import ProjectCard from "@/components/ProjectCard.astro";
import { CircleChevronRight, CircleChevronLeft } from "lucide-react";

const project = [
  { id: 1, profileImg, projectName: "Project 1", description: "Project description" },
  { id: 1, profileImg, projectName: "Project 2", description: "Project description" },
  { id: 1, profileImg, projectName: "Project 3", description: "Project description" },
];
---

<script>
  let initialRotation = 0;

  const controller = new AbortController();
  document.addEventListener(
    "click",
    (event) => {
      const target = event.target as HTMLElement;
      const buttonId = target.closest("button")?.id;
      const projectCount = target.closest("button")?.dataset.length || "0";
      const currentRotationDeg = 360 / Number(projectCount);
      const style = document.documentElement.style;

      if (buttonId === "go-next") {
        initialRotation -= currentRotationDeg;
      }
      if (buttonId === "go-prev") {
        initialRotation += currentRotationDeg;
      }

      style.setProperty("--current-rotation-value", `${initialRotation}deg`);
    },
    { signal: controller.signal }
  );

  document.addEventListener("astro:before-swap", () => {
    controller.abort();
  });
</script>

<Layout title="HomePage">
  <section class="flex size-full flex-col items-center justify-between gap-4">
    <article class="w-fit grow gap-4 p-6 sm:grid sm:justify-center sm:gap-x-4 xl:gap-x-8">
      <h1 class="text-3xl sm:col-start-2 sm:self-end
            sm:justify-self-start md:text-4xl">
        Hi, I am <strong class="block">Churchill Jay Sungcados</strong>
      </h1>
      <p
        class="my-4 inline-block bg-rose-500 py-2 text-lg font-semibold
            text-gray-50 sm:col-start-1 sm:col-end-3
            sm:row-start-2 sm:self-start sm:text-end md:text-2xl"
      >
        A Font-End Developer
      </p>
      <Image
        src={profileImg}
        alt="profile picture for portfolio"
        class="sm:relative sm:z-10 sm:col-start-1 sm:row-start-1 sm:row-end-3 sm:w-11/12 sm:justify-self-end md:w-5/6"
      />
    </article>
    <aside class="grid grow place-items-center">
      <div
        class="group w-[110%] overflow-hidden backdrop-blur-lg sm:w-[125%] md:w-[130%] md:overflow-visible lg:w-[140%]"
      >
        <button
          id="go-prev"
          class="absolute left-0 z-10 hidden h-full w-fit border p-1 backdrop-blur-md active:scale-95 group-hover:block group-focus-visible:block hocus-visible:outline hocus-visible:outline-1 md:p-2 lg:p-4"
          data-length={project.length}
          ><CircleChevronLeft className=" hocus-visible:scale-110 md:size-8" /></button
        >
        <button
          id="go-next"
          class="absolute right-0 z-10 hidden h-full w-fit border p-1 backdrop-blur-md active:scale-95 group-hover:block group-focus-visible:block hocus-visible:outline hocus-visible:outline-1 md:p-2 lg:p-4"
          data-length={project.length}
          ><CircleChevronRight className="hocus-visible:scale-110 md:size-8" /></button
        >
        <div
          class:list={" custom-div grid place-items-center"}
          style=`--quantity:${project.length}`
        >
          {
            project.map((value, index) => (
              <ProjectCard
                cardId={value.id}
                projectName={value.projectName}
                description={value.description}
                profileImg={value.profileImg}
                class:list={[
                  "relative custom-item  bg-background [grid-area:1/1] [backface-visibility:hidden] md:[backface-visibility:visible] ",
                ]}
                style={`--position:${index + 1}`}
              />
            ))
          }
        </div>
      </div>
    </aside>
  </section>
</Layout>

<style>
  @property --current-rotation-value {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
  }
  .custom-div {
    transform-style: preserve-3d;
    transition: transform 0.55s ease-in-out;
    transform: perspective(1800px) rotateY(var(--current-rotation-value));
  }
  .custom-item {
    transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
      translateZ(350px) scaleX(0.8) scaleY(0.8);
  }

  @media (min-width: 1024px) {
    .custom-item {
      transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
        translateZ(450px) scaleX(0.8) scaleY(0.8);
    }
  }
</style>

---
import Layout from "@/layouts/Layout.astro";
import profileImg from "@/assets/profile.png";
import { Image } from "astro:assets";
import ProjectCard from "@/components/ProjectCard.astro";
import { CircleChevronRight, CircleChevronLeft } from "lucide-react";
import { getFeaturedProjectUseCase } from "@/server/use-case/project";

const project = await getFeaturedProjectUseCase();
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    let initialRotation = 0;
    document.addEventListener("click", (event) => {
      const target = event.target as HTMLElement;
      const buttonId = target.closest("button")?.id;
      const projectCount = target.closest("button")?.dataset.length || "0";
      const currentRotationDeg = 360 / parseInt(projectCount, 10);
      const style = document.documentElement.style;

      if (buttonId === "next") {
        initialRotation -= currentRotationDeg;
      }
      if (buttonId === "prev") {
        initialRotation += currentRotationDeg;
      }

      style.setProperty("--current-rotation-value", `${initialRotation}deg`);
    });
  });
</script>

<Layout title="HomePage">
  <section class="flex size-full flex-col items-center justify-between gap-8 text-clip md:gap-4">
    <article class="w-fit gap-4 sm:grid sm:justify-center sm:gap-x-4 xl:gap-x-8 xl:p-2">
      <h1 class="text-3xl sm:col-start-2 sm:self-end
            sm:justify-self-start md:text-4xl">
        Hi, I am <strong class="block">Churchill Jay Sungcados</strong>
      </h1>
      <p
        class="my-4 inline-block bg-rose-500 p-2 text-lg font-semibold text-gray-50
            sm:col-start-1 sm:col-end-3 sm:row-start-2
            sm:self-start sm:text-end md:py-2 md:text-2xl"
      >
        A Font-End Developer
      </p>
      <Image
        src={profileImg}
        alt="profile picture for portfolio"
        class="sm:relative sm:z-10 sm:col-start-1 sm:row-start-1 sm:row-end-3 sm:w-11/12 sm:justify-self-end md:z-0 md:w-5/6"
      />
    </article>
    <aside class="relative flex size-fit max-w-xl grow flex-col items-center justify-center px-4">
      <div class="absolute bottom-[calc(100%-1em)] md:top-0">
        <h2
          class:list={[
            "relative text-5xl md:text-7xl font-bold text-primary",
            "after:absolute after:font-bold after:inset-0 after:content-[attr(data-title)] after:z-10 after:[-webkit-text-stroke:2px_hsl(var(--foreground))] after:[text-stroke:2px_hsla(var(--foreground))] after:text-transparent ",
          ]}
          data-title="Featured"
        >
          Featured
        </h2>
      </div>
      <div class="group overflow-hidden md:overflow-visible">
        <button
          id="prev"
          class:list={[
            "absolute left-0 top-1/2 z-10 h-1/4 w-fit -translate-y-1/2 border p-1 backdrop-blur-md active:scale-95 md:p-2 lg:p-4",
            "",
            "group-hover:block group-focus-visible:block hocus-visible:outline hocus-visible:outline-1 hoverable:hidden ",
          ]}
          data-length={project.length}
          ><CircleChevronLeft className=" hocus-visible:scale-110 md:size-8" /></button
        >
        <button
          id="next"
          class:list={[
            "absolute right-0 top-1/2 z-10 h-1/4 w-fit -translate-y-1/2 border p-1 backdrop-blur-md active:scale-95 md:p-2 lg:p-4",
            "group-hover:block group-focus-visible:block hocus-visible:outline hocus-visible:outline-1 hoverable:hidden",
          ]}
          data-length={project.length}
          ><CircleChevronRight className="hocus-visible:scale-110 md:size-8" /></button
        >
        <div
          class:list={" size-full custom-div grid place-items-center"}
          style=`--quantity:${project.length}`
        >
          {
            project.map((value, index) => (
              <ProjectCard
                techstackArr={value.techStacks}
                repoUrl={value.repoUrl}
                siteUrl={value.liveUrl}
                cardId={value.imageKey}
                projectName={value.name}
                description={value.description}
                profileImg={value.imageUrl}
                class:list={[
                  "relative custom-item bg-background [grid-area:1/1] [backface-visibility:hidden] md:[backface-visibility:visible] ",
                ]}
                style={`--position:${index + 1}`}
              />
            ))
          }
        </div>
      </div>
    </aside>
  </section>
</Layout>

<style>
  @property --current-rotation-value {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
  }
  .custom-div {
    transform-style: preserve-3d;
    transition: transform 0.55s ease-in-out;
    transform: perspective(1800px) rotateY(var(--current-rotation-value));
  }
  .custom-item {
    transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
      translateZ(350px) scaleX(0.8) scaleY(0.8);
  }

  @media (min-width: 768px) {
    .custom-item {
      transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
        translateZ(250px) scaleX(0.7) scaleY(0.7);
    }
  }
  @media (min-width: 1024px) {
    .custom-item {
      transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
        translateZ(400px) scaleX(0.7) scaleY(0.7);
    }
  }

  @media (min-width: 1536px) {
    .custom-item {
      transform: rotateY(calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg))
        translateZ(450px) scaleX(0.7) scaleY(0.7);
    }
  }
</style>
